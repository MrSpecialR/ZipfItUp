@model IEnumerable<ZipfItUp.Models.Word>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<div class="row">
    <canvas id="lineChart" height=100px width="400px"></canvas>

    <script>
        var ctx = document.getElementById("lineChart");
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: @ViewBag.WordsJSON,
                datasets: [{
                    label: '# of occurances',
                    data: @ViewBag.OccurancesJSON,
                    backgroundColor: 'rgba(0, 99, 132, 0.2)',
                    borderColor: 'rgba(0,99,132,1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero:true
                        }
                    }]
                }
            }
        });
    </script>
</div>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        
        <th>
            Rank
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WordString)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Occurances)
        </th>
    </tr>
    @{ int Rank = ((ViewBag.Page-1)*30) + 1;}
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Rank
                @{ Rank = Rank + 1;}
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WordString)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Occurances)
            </td>
        </tr>
    }

</table>
    <div>
        <div class="pull-left form-inline">
            @Html.ActionLink("Back to details.", "Details", new { id = ViewBag.Id }, new { @class = "btn btn-danger" })
        </div>
        <div class="pull-right form-inline">
            @if (!ViewBag.IsFirstPage)
            {
                @Html.ActionLink("Previous Page", "ListWords", new { id = ViewBag.Id, page = ViewBag.Page - 1 }, new { @class = "btn btn-info" })
            }
            else
            {
                @Html.ActionLink("Previous Page", "ListWords", new { id = ViewBag.Id, page = ViewBag.Page - 1 }, new { @class = "disabled btn btn-danger" })
            }

            @if (!ViewBag.IsLastPage)
            {
                @Html.ActionLink("Next Page", "ListWords", new { id = ViewBag.Id, page = ViewBag.Page + 1 }, new { @class = "btn btn-info" })
            }
            else
            {
                @Html.ActionLink("Next Page", "ListWords", new { id = ViewBag.Id, page = ViewBag.Page + 1 }, new { @class = "disabled btn btn-danger" })
            }
        </div>
    </div>
