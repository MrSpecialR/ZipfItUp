@model ZipfItUp.Models.Document

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>

<div>
    <h4>Document</h4>
    <hr />
    <div class="row">
        <canvas id="lineChart" height=100px width="400px"></canvas>

        <script>
        var ctx = document.getElementById("lineChart");
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: @ViewBag.WordsJSON,
                datasets: [{
                        label: '# of  occurances',
                        data: @ViewBag.OccurancesJSON,
                        backgroundColor: 'rgba(0, 99, 132, 0.2)',
                        borderColor: 'rgba(0,99,132,1)',
                        borderWidth: 1
                    },
                    {
                        label: '# of estimated occurances',
                    data: @ViewBag.EstimatedOccurancesJSON,
                    borderColor: 'rgba(255,99,132,1)',
                    borderWidth: 2
                        
                    }
                ]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero:true
                        }
                    }]
                }
            }
        });
        </script>
    </div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.FileName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FileName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DocumentType)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DocumentType)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FilePath)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FilePath)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.WordCount)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.WordCount)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateUploaded)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateUploaded)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
