@model ZipfItUp.DataTranfer.FileUpload

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Documents", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Document</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label  col-md-2">Upload Method: </label>
            <div class="col-md-10">
                <label class="radio-inline">
                    <input type="radio" value="Upload File" name="send" id="UploadFile" checked> Upload File
                </label>
                <label class="radio-inline">
                    <input type="radio" value="Send Text" name="send" id="SendUserInput"> Input Text
                </label>
            </div>
        </div>
        <div class="form-group" id="fileDiv">
            @Html.LabelFor(model => model.UploadedFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UploadedFile, new { @class = "form-control", @type="file", @accept=".doc, .docx, .txt, .rtf, .pdf, .srt"} )
            </div>
        </div>

        <div class="hidden" id="inputDiv">
            <div class="form-group">
                @Html.LabelFor(model => model.UserText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.UserText, new { @class = "form-control", rows=10 })
                </div>
            </div>            
            
            <div class="form-group">
                @Html.LabelFor(model => model.DocType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.DocType, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            $("#UploadFile").click(function() {
                $("#inputDiv").addClass("hidden");
                $("#fileDiv").removeClass("hidden");
            });
            $("#SendUserInput").click(function () {
                $("#inputDiv").removeClass("hidden");
                $("#fileDiv").addClass("hidden");
            });
        });
    </script>
}
