@model ZipfItUp.Models.SearchQuery

@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Search for a word</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Search, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Search, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Search, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
            </div>
        </div>
    </div>
    <div class="row">
        @ViewBag.Result
        @if (!ViewBag.NothingFound)
        {
            <table class="table">
                <tr>
                    <th>Document Name</th>
                    <th>Rank</th>
                    <th>Occurances</th>
                    <th></th>
                </tr>
                @foreach (var item in ViewBag.Documents)
                {
                    <tr>
                        <td>@item.FileName</td>
                        <td>@item.Rank</td>
                        <td>@item.Occurances</td>
                        <td>@Html.ActionLink("Details", "Details", "Documents", new {@id=item.DocumentId}, null)</td>
                    </tr>
                }
            </table>
        }
        else
        {
            if (!ViewBag.GetAction) {
                 <h2 class="text-danger">Word not found in database</h2>
            }
        }
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
