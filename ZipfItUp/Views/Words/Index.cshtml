@model IEnumerable<ZipfItUp.Models.Word>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<div class="row">
        <canvas id="lineChart" height=100px width="400px"></canvas>

    <script>
        var ctx = document.getElementById("lineChart");
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: @ViewBag.WordsJSON,
                datasets: [{
                    label: '# of occurances',
                    data: @ViewBag.OccurancesJSON,
                    backgroundColor: 'rgba(0, 99, 132, 0.2)',
                    borderColor: 'rgba(0,99,132,1)',
                    borderWidth: 1
                },
                {
                    label: '# of estimated occurances',
                    data: @ViewBag.EstimatedOccurancesJSON,
                    borderColor: 'rgba(255,99,132,1)',
                    borderWidth: 1
                }
                ]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero:true
                        }
                    }]
                }
            }
        });
    </script>
</div>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model=>model.WordString)
            </th>
            <th>
               @Html.DisplayNameFor(model=>model.Occurances)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.WordString)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Occurances)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>
